#!/usr/bin/env Rscript

library(tdmsreader)
suppressPackageStartupMessages(library("optparse"))
parser <- OptionParser()
parser <- add_option(parser, c("-t", "--tdms"), dest="tdms", help="TDMS file input")
parser <- add_option(parser, c("-v", "--verbose"), dest="verbose", help="Print verbose output")
parser <- add_option(parser, c("-c", "--channel"), help="Channel name")
parser <- add_option(parser, c("-s", "--start"), help="Start time")
parser <- add_option(parser, c("-e", "--end"), help="End time")

options = commandArgs(trailingOnly = TRUE)
opts = parse_args(parser, args = options)
print(opts)

### Program

if (length(options) < 1) {
    stop('Usage: tdmsplot -f <file> -c <object> -o <output>')
}

# open file
f = options[1]
if(length(options)>2) {
    s = as.numeric(options[3])
    e = as.numeric(options[4])
}
if(

main = TdmsFile$new(my_file)
main$read_data(my_file, start, end)


s = ranges$xmin
e = ranges$xmax


f = input$tdmsfile
if (!file.exists(f)) {
    return()
}
m = file(f, 'rb')
main = tdmsreader::TdmsFile$new(m)
main$read_data(m, s, e)

r = main$objects[[input$object]]
t = r$time_track(start = s, end = e)
dat = r$data
close(m)

if(e - s > 20) {
    dat = dat[seq(1, length(dat), by = 10)]
    t = t[seq(1, length(t), by = 10)]
    dat = dat[1:length(t)]
    plot(t, dat, type = 'l', xlab = 'time', ylab = 'volts')
    output$txt2 <- renderText('Note: displayed data is downsampled to improve speed')
} else if(e - s > 10) {
    dat = dat[seq(1, length(dat), by = 5)]
    t = t[seq(1, length(t), by = 5)]
    dat = dat[1:length(t)]
    plot(t, dat, type = 'l', xlab = 'time', ylab = 'volts')
    output$txt2 <- renderText('Note: displayed data is downsampled to improve speed')
} else {
    output$txt2 <- renderText('')
    plot(t, dat, type = 'l', xlab = 'time', ylab = 'volts')
}





for (elt in ls(main$objects)) {
    r = main$objects[[elt]]
    if (r$has_data) {
        t = r$time_track(start = start, end = end)
        s = r$data
        png(options[2], width=1200, height=600)
        plot(t, s, type='l')
        dev.off()
    }
}

close(my_file)
